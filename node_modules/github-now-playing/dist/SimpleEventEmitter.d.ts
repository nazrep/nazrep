declare type ListenersMap = {
    [event: string]: (...args: any[]) => void;
};
export declare class SimpleEventEmitter<Listeners extends ListenersMap = ListenersMap> {
    private emitter;
    on<E extends keyof Listeners>(event: E, listener: Listeners[E]): this;
    off<E extends keyof Listeners>(event: E, listener: Listeners[E]): this;
    removeAllListeners(event?: string): this;
    protected emit<E extends keyof Listeners>(event: E, ...args: Parameters<Listeners[E]>): boolean;
}
export {};
